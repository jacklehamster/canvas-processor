{
  "name": "abstract-list",
  "module": "src/index.ts",
  "description": "Provide an interface for abstract lists. An abstract list behaves like a read-only array, but without storage. It can virtually store an infinite number of elements. It's meant for working flexibly with arrays. Regular arrays can be used as abstract lists as well.",
  "version": "1.0.4",
  "keywords": [
    "bun",
    "bunjs",
    "typescript",
    "list",
    "abstract",
    "virtual",
    "infinite"
  ],
  "repository": {
    "type": "git",
    "url": "git@github.com:jacklehamster/abstract-list.git"
  },
  "homepage": "<fill in homepage>",
  "author": {
    "name": "Jack Le Hamster",
    "email": "jacklehamster@gmail.com"
  },
  "license": "MIT",
  "type": "module",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "engines": {
    "node": ">=14.0.0"
  },
  "scripts": {
    "tsc": "tsc",
    "start": "bun run index.ts",
    "test": "bun test",
    "build": "bun i && bun run fix-package-name && rm -rf *.tsbuildinfo && rm -rf dist/*.* && bun run bundler/bundler.ts && bun run test && bun run build:declaration",
    "build:declaration": "tsc --emitDeclarationOnly --project tsconfig.types.json",
    "make-repo-ssh": "./make-repo-ssh.sh",
    "fix-package-name": "npm explore package-name-fixer -- bun start \"$(pwd)\"",
    "autocommit": "npm explore @dobuki/autocommit -- bun run autocommit \"$(pwd)\"",
    "np": "bun run build && bun run make-repo-ssh && bun run autocommit && np"
  },
  "publishConfig": {
    "access": "public"
  },
  "files": [
    "dist"
  ],
  "devDependencies": {
    "@dobuki/autocommit": "^1.0.8",
    "@types/bun": "^1.0.4",
    "@types/jest": "^29.5.6",
    "@types/mocha": "^10.0.3",
    "@types/react": "^18.2.21",
    "bun": "^1.0.25",
    "bun-types": "^1.0.2",
    "jest": "^29.7.0",
    "np": "^9.2.0",
    "package-name-fixer": "^1.0.9",
    "prettier": "^3.0.3",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "typescript": "^5.3.3"
  },
  "peerDependencies": {
    "typescript": "^5.0.0"
  }
}
